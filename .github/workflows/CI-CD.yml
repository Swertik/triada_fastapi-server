name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    environment: .env
    steps:
    - uses: actions/checkout@v4


    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.13"

    - name: Распаковка JSON в .env
      run: |
        echo '${{ secrets.ENV_JSON }}' > env.json
        cat env.json | jq -r 'to_entries | map("\(.key)=\(.value)") | .[]' > .env


    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install pytest
        pip install -e .
    
    - name: Run settings.py
      run: pytest

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ vars.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest
          build-args: |
            GROUP_TOKEN=${{ secrets.GROUP_TOKEN }}
            MY_TOKEN=${{ secrets.MY_TOKEN }}
            DATABASE_URL=${{ secrets.DATABASE_URL }}
