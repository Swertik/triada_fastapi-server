version: "3.8"

services:
  fastapi:
    image: swertik/triada_fastapi-server:latest
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    ports:
      - "8080:8080"
    environment:
      # Здесь вы можете передать переменные окружения,
      # например, пути к файлам секретов, если приложение само их считывает.
      - DATABASE_URL_FILE=/run/secrets/docker_database_url
      - GROUP_TOKEN_FILE=/run/secrets/group_token
      - MY_TOKEN_FILE=/run/secrets/my_token
      - REDIS_HOST=redis
    secrets:
      - group_token
      - my_token
      - docker_database_url
      - dockerhub_password

  redis:
    image: redis:latest
    deploy:

      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - "6379:6379"

  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/database_password
      POSTGRES_DB: Triada
    volumes:
      - pgdata:/var/lib/postgresql/17/data
      - ./dump/Triada_26_224_167_227-2025_03_10_03_46_13-dump.sql:/docker-entrypoint-initdb.d/dump.sql:ro
    deploy:
      replicas: 1
    secrets:
      - database_password

  vault:
    image: hashicorp/vault:latest
    cap_add:
      - IPC_LOCK
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: root
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
    ports:
      - "8200:8200"
    deploy:
      replicas: 1

  cloudpub:
    image: cloudpub/cloudpub:latest
    environment:
      - TOKEN_FILE=cloudpub_password
    command: ["publish", "http", "host.docker.internal:8080"]  # Туннелируем localhost:8080
    volumes:
      - cloudpub-config:/home/cloudpub
    restart: unless-stopped
    secrets:
      - cloudpub_password

secrets:
  group_token:
    file: ./secrets/group_token
  my_token:
    file: ./secrets/my_token
  database_url:
    file: ./secrets/database_url
  database_password:
    file: ./secrets/database_password
  docker_database_url:
    file: ./secrets/docker_database_url
  dockerhub_password:
    file: ./secrets/dockerhub_password
  registry-user:
    external: true
  registry-pass:
    external: true
  cloudpub_password:
    file: ./secrets/cloudpub_password
volumes:
  pgdata:
  cloudpub-config: